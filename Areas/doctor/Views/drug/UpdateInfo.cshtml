@model WebApplication8.Models.UpdateUser

@{
    Layout = null;
    ViewBag.Title = "UpdateInfo";
}

<style>
    * {
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
    }


    ::-webkit-scrollbar {
        width: 15px;
    }

    ::-webkit-scrollbar-track {
        background-color: white;
    }

    ::-webkit-scrollbar-thumb {
        background-color: #0075ff;
    }

        ::-webkit-scrollbar-thumb:hover {
            background-color: #0075ff;
        }

    html {
        scroll-behavior: smooth;
    }

    body {
        margin: 0;
        padding: 0;
        background-repeat: no-repeat;
        background-size: 100%;
        position: relative;
        background-color: #F5F5F5;
    }

    a {
        text-decoration: none;
    }

    ul {
        list-style: none;
        margin: 0;
        padding: 0;
    }

    .container {
        padding-left: 15px;
        padding-right: 15px;
        margin-left: auto;
        margin-right: auto;
    }

    .header {
        position: relative;
        background-color: white;
        -webkit-box-shadow: 0 0 10px #ddd;
        -moz-box-shadow: 0 0 10px #ddd;
        box-shadow: 0 0 10px #ddd;
    }

        .header .container {
            display: flex;
            justify-content: space-between;
            align-content: center;
            align-items: center;
            flex-wrap: wrap;
            position: relative;
        }

        .header .logo {
            color: #2196f3;
            font-size: 26px;
            font-weight: bold;
            height: 72px;
            display: flex;
            justify-content: center;
            align-content: center;
            align-items: center;
        }

        .header .main-nav {
            display: flex;
        }


            .header .main-nav > li:hover .mega-menue {
                opacity: 1;
                z-index: 100;
                top: calc(100% + 1px);
            }

            .header .main-nav > li > a {
                display: flex;
                justify-content: center;
                align-items: center;
                height: 72px;
                position: relative;
                color: black;
                padding: 0 30px;
                transition: 0.3s;
                overflow: hidden;
            }



                .header .main-nav > li > a::before {
                    content: "";
                    width: 100%;
                    height: 4px;
                    position: absolute;
                    top: 0;
                    left: -100%;
                    background-color: #2196f3;
                    transition: 0.3s;
                }

                .header .main-nav > li > a:hover {
                    color: #2196f3;
                    background-color: #fafafa;
                }

                    .header .main-nav > li > a:hover::before {
                        left: 0;
                    }
            .header .main-nav > li > .active {
                color: #2196f3;
                background-color: #fafafa;
            }

                .header .main-nav > li > .active::before {
                    left: 0;
                }

    .form-horizontal {
        min-width: 500px;
        min-height: 420px;
        background-color: rgba(0,0,0,0.7);
        color: #fff;
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        box-sizing: border-box;
        padding: 30px 30px;
        box-shadow: 0px 0px 3px black;
        border-radius: 30px;
        margin: 20px;
    }

        .form-horizontal h2 {
            text-align: center;
            margin: 0 auto;
            font-size: 1.5rem;
            font-weight: bold;
            margin-top: 1rem;
            margin-bottom: 1rem;
            color: #fff;
        }

    .form {
        display: flex;
        justify-content: center;
        flex-direction: column;
        flex-wrap: wrap;
        align-items: center;
        margin-top: 50px;
        gap: 15px;
    }

    .form-group {
        width: 100%;
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 10px;
        justify-content: space-between;
    }

    input[type="text"],
    input[type="password"],
    input[type="email"],
    input[type="url"],
    input[type="tel"],
    input[type="number"],
    input[type="search"] {
        display: inline-block;
        box-sizing: border-box;
        width: 100%;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.42857143;
        color: #555;
        background-color: #fff;
        background-image: none;
        border: 1px solid #ccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
        -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
        transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
    }

        input[type="text"]:focus,
        input[type="password"]:focus,
        input[type="email"]:focus,
        input[type="url"]:focus,
        input[type="tel"]:focus,
        input[type="number"]:focus,
        input[type="search"]:focus {
            border-color: #66afe9;
            outline: 0;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6);
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6);
        }

        input[type="text"]:disabled,
        input[type="password"]:disabled,
        input[type="email"]:disabled,
        input[type="url"]:disabled,
        input[type="tel"]:disabled,
        input[type="number"]:disabled,
        input[type="search"]:disabled {
            background-color: #eee;
            cursor: not-allowed;
            opacity: 1;
        }

    input[type="submit"] {
        border: none;
        outline: none;
        height: 30px;
        background-color: #0075ff;
        color: #fff;
        font-size: 14px;
        border-radius: 10px;
        font-family: "indie flower", cursive;
        font-weight: bold;
        padding: 5px;
        width: 100px;
        margin: 5px;
    }

        input[type="submit"]:hover {
            opacity: 0.7;
            cursor: pointer;
        }
    .field-validation-error {
        color: #e80c4d;
        font-weight: bold;
    }

    .field-validation-valid {
        display: none;
    }



    input[type="checkbox"].input-validation-error {
        border: 0 none;
    }

    .validation-summary-errors {
        color: #e80c4d;
        font-weight: bold;
        font-size: 1.1em;
    }
</style>

<div class="header">
    <div class="container">

        <a href="#" class="logo">Doctor</a>
        <ul class="main-nav">

            <li>@Html.ActionLink("Search Drug", "Index")</li>
            <li>@Html.ActionLink("Check Conflict", "Create")</li>
            <li>@Html.ActionLink("Update Info", "UpdateInfo", null, new { @class = "active" })</li>
            <li>@Html.ActionLink("Logout", "Logout")</li>


        </ul>

    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Update User Info</h2>
        <hr />
        <div class="form">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 ">
                    @Html.ValueFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.Label("Old Password")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("New Password")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Confirm Password")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}
